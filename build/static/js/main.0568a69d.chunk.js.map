{"version":3,"sources":["components/Person.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","delPerson","name","number","onClick","Notification","message","mode","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","notificationMessage","setNotificationMessage","modeAlert","setModeAlert","useEffect","personService","returnedPerson","value","onChange","event","target","onSubmit","preventDefault","newPerson","dublicateId","filteredList","filter","p","length","checkDuplicates","concat","setTimeout","catch","error","window","confirm","map","type","toLowerCase","includes","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0568a69d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, delPerson }) => {\n\n  return (\n    <li>\n      {person.name} {person.number}\n      <button onClick={delPerson}> delete </button>\n    </li>\n  )\n}\n\nexport default Person","import React from 'react'\n\nconst Notification = ({ message, mode }) => {\n    if (message === null) {\n        return null\n    }\n\n    if (mode === \"error\"){\n        return (\n            <div className=\"error\">\n                {message}\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n  const getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\n  const del = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n  \n  export default { \n    getAll: getAll, \n    create: create, \n    update: update,\n    del:    del\n  }","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [modeAlert, setModeAlert] = useState('error')\n\n  const checkDuplicates = (newName) => {\n    const filteredList = persons.filter(p => p.name === newName)\n    if (filteredList.length > 0) {\n      return filteredList[0].id\n    }\n    return -1\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    const dublicateId = checkDuplicates(newName)\n    if (dublicateId === -1) {\n      personService.create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setModeAlert('alert')\n          setNotificationMessage(\n            `${returnedPerson.name} was added`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setModeAlert('error')\n          setNotificationMessage(\n            `${error.response.data.error}`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n    } else {\n      if (window.confirm(`${newName} is already added to phonebook. Do you want to update the number?`)){\n        personService.update(dublicateId,newPerson)\n          .then(response => {\n            setPersons(persons.map(p => p.id !== dublicateId ? p : response))\n          })\n      }\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameFilter = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  const delPerson = id => {\n\n    if (window.confirm(`Do you really want to delete?`)) {\n      personService.del(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n        })\n        .catch(error => {\n          setModeAlert('error')\n          setNotificationMessage(\n            `Person '${id}' was already removed from server`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const hook = () => {\n    personService.getAll()\n      .then(returnedPerson => {\n        setPersons(returnedPerson)\n      })\n  }\n\n  useEffect(hook, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} mode={modeAlert}/>\n      <form>\n        <div>\n          filter shown with <input value={nameFilter} onChange={handleNameFilter} />\n        </div>\n      </form>\n      <h2>Add New</h2>\n      <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={handleNewName} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNewNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <ul>\n        {persons.filter(p => p.name.toLowerCase().includes(nameFilter))\n          .map(p =>\n            <Person key={p.name} person={p} delPerson={() => delPerson(p.id)} />\n          )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}